[{"data":1,"prerenderedAt":765},["ShallowReactive",2],{"/blog/nuxt-content":3},{"id":4,"title":5,"body":6,"date":752,"description":753,"extension":112,"img":754,"meta":755,"navigation":138,"path":760,"published":138,"seo":761,"stem":762,"tags":763,"__hash__":764},"blog/blog/nuxt-content.md","Learning about Nuxt Content",{"type":7,"value":8,"toc":745},"minimal",[9,13,18,21,24,29,41,48,51,100,103,108,168,173,223,227,242,245,277,280,287,355,359,362,454,460,738,741],[10,11,12],"p",{},"Nuxt by itself is a powerful tool for creating websites and applications. Part\nof what makes it powerful is the ability it gives us to use modules to enhance\nthe capabilities of the framework.",[14,15,17],"h2",{"id":16},"nuxt-content","Nuxt Content",[10,19,20],{},"A popular Nuxt module is the Nuxt/Content module. The Nuxt content module allows\nyou to fetch content from different file types and import it into your site.\nThis gives you what is essentially a git based CMS (content management system).",[10,22,23],{},"After you’ve installed the Nuxt/Content module into your Nuxt project, you can\nstart using it by adding a content folder at the root of the project. Inside\nthis folder you can add Markdown, JSON, YAML, CSV, and XML files which will be\nparsed and made available in the rest of your project. You can even separate\ndifferent types of content within the content directory. For example, if you are\nbuilding out a personal portfolio page/blog, you can have sub-directories for\nyour projects and also one for your blog posts.",[25,26,28],"h3",{"id":27},"getting-started","Getting Started",[10,30,31,32,36,37,40],{},"With that, let’s create the content folder in our example app a tthe root of the\nproject. Let’s add an ",[33,34,35],"code",{},"index.md"," and an ",[33,38,39],{},"about.md"," page inside of there.",[10,42,43],{},[44,45],"img",{"alt":46,"src":47},"content folder structure","/nuxt-content-blog/content-folder.png",[10,49,50],{},"Inside of our markdown files we can add some YAML code to attach some properties\nto each file if we want. This YAML code at the top of markdown files is called\n“Front Matter” and must be the first thing in the file. For example, I want each\npage to have a title and a description, this is where I would add that.",[52,53,58],"pre",{"className":54,"code":55,"language":56,"meta":57,"style":57},"language-yml shiki shiki-themes github-dark","---\ntitle: Home\ndescription: This is my homepage\n---\n","yml","",[33,59,60,69,84,95],{"__ignoreMap":57},[61,62,65],"span",{"class":63,"line":64},"line",1,[61,66,68],{"class":67},"svObZ","---\n",[61,70,72,76,80],{"class":63,"line":71},2,[61,73,75],{"class":74},"s4JwU","title",[61,77,79],{"class":78},"s95oV",": ",[61,81,83],{"class":82},"sU2Wk","Home\n",[61,85,87,90,92],{"class":63,"line":86},3,[61,88,89],{"class":74},"description",[61,91,79],{"class":78},[61,93,94],{"class":82},"This is my homepage\n",[61,96,98],{"class":63,"line":97},4,[61,99,68],{"class":67},[10,101,102],{},"Below the front matter, I can now add my article/blog content.",[10,104,105,106],{},"Here is the content for ",[33,107,35],{},[52,109,113],{"className":110,"code":111,"language":112,"meta":57,"style":57},"language-md shiki shiki-themes github-dark","---\ntitle: Home\ndescription: This is my homepage\n---\n\n## Welcome\n\nYou can edit me in \u003Ccode>content/index.md\u003C/code>.\n\nSame for the [about](/about) page!\n","md",[33,114,115,119,124,129,133,140,146,151,157,162],{"__ignoreMap":57},[61,116,117],{"class":63,"line":64},[61,118,68],{},[61,120,121],{"class":63,"line":71},[61,122,123],{},"title: Home\n",[61,125,126],{"class":63,"line":86},[61,127,128],{},"description: This is my homepage\n",[61,130,131],{"class":63,"line":97},[61,132,68],{},[61,134,136],{"class":63,"line":135},5,[61,137,139],{"emptyLinePlaceholder":138},true,"\n",[61,141,143],{"class":63,"line":142},6,[61,144,145],{},"## Welcome\n",[61,147,149],{"class":63,"line":148},7,[61,150,139],{"emptyLinePlaceholder":138},[61,152,154],{"class":63,"line":153},8,[61,155,156],{},"You can edit me in \u003Ccode>content/index.md\u003C/code>.\n",[61,158,160],{"class":63,"line":159},9,[61,161,139],{"emptyLinePlaceholder":138},[61,163,165],{"class":63,"line":164},10,[61,166,167],{},"Same for the [about](/about) page!\n",[10,169,170,171],{},"And here is the content for ",[33,172,39],{},[52,174,176],{"className":110,"code":175,"language":112,"meta":57,"style":57},"---\ntitle: About\ndescription: This is my About page\n---\n\n# About page\n\nI am the about page, you can edit me in \u003Ccode>content/about.md\u003C/code>\n\nLink to [home](/)\n",[33,177,178,182,187,192,196,200,205,209,214,218],{"__ignoreMap":57},[61,179,180],{"class":63,"line":64},[61,181,68],{},[61,183,184],{"class":63,"line":71},[61,185,186],{},"title: About\n",[61,188,189],{"class":63,"line":86},[61,190,191],{},"description: This is my About page\n",[61,193,194],{"class":63,"line":97},[61,195,68],{},[61,197,198],{"class":63,"line":135},[61,199,139],{"emptyLinePlaceholder":138},[61,201,202],{"class":63,"line":142},[61,203,204],{},"# About page\n",[61,206,207],{"class":63,"line":148},[61,208,139],{"emptyLinePlaceholder":138},[61,210,211],{"class":63,"line":153},[61,212,213],{},"I am the about page, you can edit me in \u003Ccode>content/about.md\u003C/code>\n",[61,215,216],{"class":63,"line":159},[61,217,139],{"emptyLinePlaceholder":138},[61,219,220],{"class":63,"line":164},[61,221,222],{},"Link to [home](/)\n",[14,224,226],{"id":225},"getting-access-to-the-content","Getting Access to the Content",[10,228,229,230,233,234,237,238],{},"Now that we’ve written our content, we need to get access to that content inside\nof our app. First, create a ",[33,231,232],{},"_slug.vue"," file in the ",[33,235,236],{},"pages"," folder of the\nproject. ",[44,239],{"alt":240,"src":241},"pages folder structure","/nuxt-content-blog/slug-file.png",[10,243,244],{},"To do this we will use the asyncData method provided by Nuxt. The Nuxt/Content\nmodule injects the $content instance into the app, so we can destructure it from\nthe context object argument on asyncData along with the params object. Using the\nparams object we can grab the slug, or path name from the url. Let’s assign that\nto a constant called slug.",[52,246,250],{"className":247,"code":248,"language":249,"meta":57,"style":57},"language-js shiki shiki-themes github-dark","async asyncData({ $content, params, error }) {\n    const slug = params.slug || \"index\";\n    return\n  },\n};\n","js",[33,251,252,257,262,267,272],{"__ignoreMap":57},[61,253,254],{"class":63,"line":64},[61,255,256],{},"async asyncData({ $content, params, error }) {\n",[61,258,259],{"class":63,"line":71},[61,260,261],{},"    const slug = params.slug || \"index\";\n",[61,263,264],{"class":63,"line":86},[61,265,266],{},"    return\n",[61,268,269],{"class":63,"line":97},[61,270,271],{},"  },\n",[61,273,274],{"class":63,"line":135},[61,275,276],{},"};\n",[10,278,279],{},"Now we want to get the page content. To do this, we use the $content instance to\nfetch the page by passing in the file path of the page we want, which we’ve\nstored in our slug constant, and then calling fetch on that. For good measure,\nwe’ve added a catch function in case it can’t find the page. Once that is\nfetched, it will then return out into our component properties.",[10,281,282,283,286],{},"Your ",[33,284,285],{},"asyncData"," function should look like this now:",[52,288,290],{"className":247,"code":289,"language":249,"meta":57,"style":57},"async asyncData({ $content, params, error }) {\n    const slug = params.slug || \"index\";\n    const page = await $content(slug)\n      .fetch()\n      .catch((err) => {\n        error({ statusCode: 404, message: \"Page not found\" });\n      });\n\n    return {\n      page,\n    };\n  },\n};\n",[33,291,292,296,300,305,310,315,320,325,329,334,339,345,350],{"__ignoreMap":57},[61,293,294],{"class":63,"line":64},[61,295,256],{},[61,297,298],{"class":63,"line":71},[61,299,261],{},[61,301,302],{"class":63,"line":86},[61,303,304],{},"    const page = await $content(slug)\n",[61,306,307],{"class":63,"line":97},[61,308,309],{},"      .fetch()\n",[61,311,312],{"class":63,"line":135},[61,313,314],{},"      .catch((err) => {\n",[61,316,317],{"class":63,"line":142},[61,318,319],{},"        error({ statusCode: 404, message: \"Page not found\" });\n",[61,321,322],{"class":63,"line":148},[61,323,324],{},"      });\n",[61,326,327],{"class":63,"line":153},[61,328,139],{"emptyLinePlaceholder":138},[61,330,331],{"class":63,"line":159},[61,332,333],{},"    return {\n",[61,335,336],{"class":63,"line":164},[61,337,338],{},"      page,\n",[61,340,342],{"class":63,"line":341},11,[61,343,344],{},"    };\n",[61,346,348],{"class":63,"line":347},12,[61,349,271],{},[61,351,353],{"class":63,"line":352},13,[61,354,276],{},[14,356,358],{"id":357},"displaying-the-content","Displaying the Content",[10,360,361],{},"So now we have the page content available on our page component. We just need to\ndisplay that content. For each page, we will want to display the title and\ndescription we put into the front matter of each markdown file. With the rest of\nthe page content, we pass that into the nuxt-content component as the document\nproperty. That will then display our page content.",[52,363,367],{"className":364,"code":365,"language":366,"meta":57,"style":57},"language-html shiki shiki-themes github-dark","\u003Ctemplate>\n  \u003Cdiv>\n    \u003Ch1>{{ page.title }}\u003C/h1>\n    \u003Cp>{{ page.description }}\u003C/p>\n    \u003Cnuxt-content :document=\"page\" />\n  \u003C/div>\n\u003C/template>\n","html",[33,368,369,380,390,405,418,436,445],{"__ignoreMap":57},[61,370,371,374,377],{"class":63,"line":64},[61,372,373],{"class":78},"\u003C",[61,375,376],{"class":74},"template",[61,378,379],{"class":78},">\n",[61,381,382,385,388],{"class":63,"line":71},[61,383,384],{"class":78},"  \u003C",[61,386,387],{"class":74},"div",[61,389,379],{"class":78},[61,391,392,395,398,401,403],{"class":63,"line":86},[61,393,394],{"class":78},"    \u003C",[61,396,397],{"class":74},"h1",[61,399,400],{"class":78},">{{ page.title }}\u003C/",[61,402,397],{"class":74},[61,404,379],{"class":78},[61,406,407,409,411,414,416],{"class":63,"line":97},[61,408,394],{"class":78},[61,410,10],{"class":74},[61,412,413],{"class":78},">{{ page.description }}\u003C/",[61,415,10],{"class":74},[61,417,379],{"class":78},[61,419,420,422,424,427,430,433],{"class":63,"line":135},[61,421,394],{"class":78},[61,423,16],{"class":74},[61,425,426],{"class":67}," :document",[61,428,429],{"class":78},"=",[61,431,432],{"class":82},"\"page\"",[61,434,435],{"class":78}," />\n",[61,437,438,441,443],{"class":63,"line":142},[61,439,440],{"class":78},"  \u003C/",[61,442,387],{"class":74},[61,444,379],{"class":78},[61,446,447,450,452],{"class":63,"line":148},[61,448,449],{"class":78},"\u003C/",[61,451,376],{"class":74},[61,453,379],{"class":78},[10,455,456,457,459],{},"The full ",[33,458,232],{}," file should look like this:",[52,461,463],{"className":364,"code":462,"language":366,"meta":57,"style":57},"\u003Ctemplate>\n  \u003Cdiv>\n    \u003Ch1>{{ page.title }}\u003C/h1>\n    \u003Cp>{{ page.description }}\u003C/p>\n    \u003Cnuxt-content :document=\"page\" />\n  \u003C/div>\n\u003C/template>\n\n\u003Cscript>\n  export default {\n    async asyncData({ $content, params, error }) {\n      const slug = params.slug || \"index\";\n      const page = await $content(slug)\n        .fetch()\n        .catch((err) => {\n          error({ statusCode: 404, message: \"Page not found\" });\n        });\n\n      return {\n        page,\n      };\n    },\n  };\n\u003C/script>\n",[33,464,465,473,481,493,505,519,527,535,539,548,560,589,613,631,643,665,686,692,697,705,711,717,723,729],{"__ignoreMap":57},[61,466,467,469,471],{"class":63,"line":64},[61,468,373],{"class":78},[61,470,376],{"class":74},[61,472,379],{"class":78},[61,474,475,477,479],{"class":63,"line":71},[61,476,384],{"class":78},[61,478,387],{"class":74},[61,480,379],{"class":78},[61,482,483,485,487,489,491],{"class":63,"line":86},[61,484,394],{"class":78},[61,486,397],{"class":74},[61,488,400],{"class":78},[61,490,397],{"class":74},[61,492,379],{"class":78},[61,494,495,497,499,501,503],{"class":63,"line":97},[61,496,394],{"class":78},[61,498,10],{"class":74},[61,500,413],{"class":78},[61,502,10],{"class":74},[61,504,379],{"class":78},[61,506,507,509,511,513,515,517],{"class":63,"line":135},[61,508,394],{"class":78},[61,510,16],{"class":74},[61,512,426],{"class":67},[61,514,429],{"class":78},[61,516,432],{"class":82},[61,518,435],{"class":78},[61,520,521,523,525],{"class":63,"line":142},[61,522,440],{"class":78},[61,524,387],{"class":74},[61,526,379],{"class":78},[61,528,529,531,533],{"class":63,"line":148},[61,530,449],{"class":78},[61,532,376],{"class":74},[61,534,379],{"class":78},[61,536,537],{"class":63,"line":153},[61,538,139],{"emptyLinePlaceholder":138},[61,540,541,543,546],{"class":63,"line":159},[61,542,373],{"class":78},[61,544,545],{"class":74},"script",[61,547,379],{"class":78},[61,549,550,554,557],{"class":63,"line":164},[61,551,553],{"class":552},"snl16","  export",[61,555,556],{"class":552}," default",[61,558,559],{"class":78}," {\n",[61,561,562,565,568,571,575,578,581,583,586],{"class":63,"line":341},[61,563,564],{"class":552},"    async",[61,566,567],{"class":67}," asyncData",[61,569,570],{"class":78},"({ ",[61,572,574],{"class":573},"s9osk","$content",[61,576,577],{"class":78},", ",[61,579,580],{"class":573},"params",[61,582,577],{"class":78},[61,584,585],{"class":573},"error",[61,587,588],{"class":78}," }) {\n",[61,590,591,594,598,601,604,607,610],{"class":63,"line":347},[61,592,593],{"class":552},"      const",[61,595,597],{"class":596},"sDLfK"," slug",[61,599,600],{"class":552}," =",[61,602,603],{"class":78}," params.slug ",[61,605,606],{"class":552},"||",[61,608,609],{"class":82}," \"index\"",[61,611,612],{"class":78},";\n",[61,614,615,617,620,622,625,628],{"class":63,"line":352},[61,616,593],{"class":552},[61,618,619],{"class":596}," page",[61,621,600],{"class":552},[61,623,624],{"class":552}," await",[61,626,627],{"class":67}," $content",[61,629,630],{"class":78},"(slug)\n",[61,632,634,637,640],{"class":63,"line":633},14,[61,635,636],{"class":78},"        .",[61,638,639],{"class":67},"fetch",[61,641,642],{"class":78},"()\n",[61,644,646,648,651,654,657,660,663],{"class":63,"line":645},15,[61,647,636],{"class":78},[61,649,650],{"class":67},"catch",[61,652,653],{"class":78},"((",[61,655,656],{"class":573},"err",[61,658,659],{"class":78},") ",[61,661,662],{"class":552},"=>",[61,664,559],{"class":78},[61,666,668,671,674,677,680,683],{"class":63,"line":667},16,[61,669,670],{"class":67},"          error",[61,672,673],{"class":78},"({ statusCode: ",[61,675,676],{"class":596},"404",[61,678,679],{"class":78},", message: ",[61,681,682],{"class":82},"\"Page not found\"",[61,684,685],{"class":78}," });\n",[61,687,689],{"class":63,"line":688},17,[61,690,691],{"class":78},"        });\n",[61,693,695],{"class":63,"line":694},18,[61,696,139],{"emptyLinePlaceholder":138},[61,698,700,703],{"class":63,"line":699},19,[61,701,702],{"class":552},"      return",[61,704,559],{"class":78},[61,706,708],{"class":63,"line":707},20,[61,709,710],{"class":78},"        page,\n",[61,712,714],{"class":63,"line":713},21,[61,715,716],{"class":78},"      };\n",[61,718,720],{"class":63,"line":719},22,[61,721,722],{"class":78},"    },\n",[61,724,726],{"class":63,"line":725},23,[61,727,728],{"class":78},"  };\n",[61,730,732,734,736],{"class":63,"line":731},24,[61,733,449],{"class":78},[61,735,545],{"class":74},[61,737,379],{"class":78},[10,739,740],{},"As you can see, the nuxt content module has made it really easy to add a git\nbased CMS to your sites. This has been a really brief introduction to the\nmodule. I would encourage you to look at the docs to learn more and better\nunderstand the different use cases for it.",[742,743,744],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .s4JwU, html code.shiki .s4JwU{--shiki-default:#85E89D}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .s9osk, html code.shiki .s9osk{--shiki-default:#FFAB70}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}",{"title":57,"searchDepth":71,"depth":71,"links":746},[747,750,751],{"id":16,"depth":71,"text":17,"children":748},[749],{"id":27,"depth":86,"text":28},{"id":225,"depth":71,"text":226},{"id":357,"depth":71,"text":358},"2021-08-01T00:00:00.000Z","Nuxt Content is a powerful module that allows you to fetch content from different file types and import it into your site. This gives you the ability to add a git based CMS (content management system) to your project.","books.jpg",{"alt":756,"photographerLink":757,"unsplashLink":758,"photographer":759},"learning about nuxt-content","https://unsplash.com/@kimberlyfarmer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText","https://unsplash.com/s/photos/blog?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText","Kimberly Farmer","/blog/nuxt-content",{"title":5,"description":753},"blog/nuxt-content",null,"Mo4gDJjyGHLathMivpJcLxsiPBLl3_CdYKmtFKrg3sg",1750541626593]