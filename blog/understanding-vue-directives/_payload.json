[{"data":1,"prerenderedAt":266},["ShallowReactive",2],{"/blog/understanding-vue-directives":3},{"id":4,"title":5,"body":6,"date":254,"description":255,"extension":256,"img":257,"meta":258,"navigation":260,"path":261,"published":260,"seo":262,"stem":263,"tags":264,"__hash__":265},"blog/blog/understanding-vue-directives.md","Understanding Vue Directives",{"type":7,"value":8,"toc":244},"minimal",[9,18,23,37,54,57,61,66,69,110,125,128,152,159,163,181,185,205,228,231,240],[10,11,12,13,17],"p",{},"⚠️ ",[14,15,16],"strong",{},"NOTE",": This applies to Vue 2. Vue 3 has some changes and the\nfollowing might not apply.",[19,20,22],"h2",{"id":21},"what-is-a-directive","What is a directive?",[10,24,25,26,30],{},"So what is a directive in Vue? At the core, ",[27,28,29],"mark",{},"a directive is a \"prefixed\nHTML attribute that tells the library to do something to a DOM\nelement.",[31,32,36],"a",{"href":33,"rel":34},"https://012.vuejs.org/guide/directives.html",[35],"nofollow","*",[10,38,39,40,47,48,53],{},"In plain English, it is a piece of code that we use to tell Vue to do something\nwith our markup. A couple of the most used directives in Vue are the ",[41,42,43],"em",{},[44,45,46],"code",{},"v-bind","\nand the ",[41,49,50],{},[44,51,52],{},"v-on"," directives.",[10,55,56],{},"You'll notice we mentioned in the highlighted text that in Vue a directive must\nbe prefixed. The default prefix for directives is the letter 'v' followed by the\ndirective name/id.",[19,58,60],{"id":59},"parts-of-a-directive","Parts of a directive",[62,63,65],"h3",{"id":64},"expression","Expression",[10,67,68],{},"Directives can take in a value. Take this code for example:",[70,71,76],"pre",{"className":72,"code":73,"language":74,"meta":75,"style":75},"language-html shiki shiki-themes github-dark","\u003Cdiv v-text=\"message\">\u003C/div>\n","html","",[44,77,78],{"__ignoreMap":75},[79,80,83,87,91,95,98,102,105,107],"span",{"class":81,"line":82},"line",1,[79,84,86],{"class":85},"s95oV","\u003C",[79,88,90],{"class":89},"s4JwU","div",[79,92,94],{"class":93},"svObZ"," v-text",[79,96,97],{"class":85},"=",[79,99,101],{"class":100},"sU2Wk","\"message\"",[79,103,104],{"class":85},">\u003C/",[79,106,90],{"class":89},[79,108,109],{"class":85},">\n",[10,111,112,113,118,119,124],{},"Here we are using the ",[41,114,115],{},[44,116,117],{},"v-text"," directive. The expression we are using is\n",[41,120,121],{},[44,122,123],{},"message",", which is referring to a property on the Vue instance.",[10,126,127],{},"In addition to binding to just a single value, directives can take in an\nexpression.",[70,129,131],{"className":72,"code":130,"language":74,"meta":75,"style":75},"\u003Cdiv v-text=\"'hello ' + user.firstName + ' ' + user.lastName\">\u003C/div>\n",[44,132,133],{"__ignoreMap":75},[79,134,135,137,139,141,143,146,148,150],{"class":81,"line":82},[79,136,86],{"class":85},[79,138,90],{"class":89},[79,140,94],{"class":93},[79,142,97],{"class":85},[79,144,145],{"class":100},"\"'hello ' + user.firstName + ' ' + user.lastName\"",[79,147,104],{"class":85},[79,149,90],{"class":89},[79,151,109],{"class":85},[10,153,154,155,158],{},"In the above code, we have passed in an entire string that depends on multiple\nproperties of the Vue instance. Whenever one of those properties changes, the\ntext will be updated. To prevent using too much logic inside of directive\nexpressions, we are limited to using ",[14,156,157],{},"one statement"," only. That might seem\nlike an annoyance, but realistically we have better ways of handling complex\nlogic, like computed properties.",[62,160,162],{"id":161},"argument","Argument",[10,164,165,166,169,170,174,175,180],{},"Arguments in Vue directives are ways we can adjust the functionality of a\nparticular directive. An argument is passed to a directive after the ",[44,167,168],{},":",". For\nexample, with the ",[41,171,172],{},[44,173,52],{}," directive we pass an argument telling Vue which event\nto listen to. Eg: ",[41,176,177],{},[44,178,179],{},"v-on:click",".",[62,182,184],{"id":183},"modifiers","Modifiers",[10,186,187,188,193,194,198,199,204],{},"Directives can also have modifiers to add more functionality changes. Again as\nan example, we can add the ",[41,189,190],{},[44,191,192],{},"stop"," modifier to the ",[41,195,196],{},[44,197,52],{}," directive to stop\nevent propagation. Vue has other built in modifiers that can be really helpful.\nSome of the more helpful ones are on the ",[41,200,201],{},[44,202,203],{},"keyup"," event. See below for an\nexample.",[70,206,208],{"className":72,"code":207,"language":74,"meta":75,"style":75},"\u003Cinput v-on:keyup.enter=\"submit\" />\n",[44,209,210],{"__ignoreMap":75},[79,211,212,214,217,220,222,225],{"class":81,"line":82},[79,213,86],{"class":85},[79,215,216],{"class":89},"input",[79,218,219],{"class":93}," v-on:keyup.enter",[79,221,97],{"class":85},[79,223,224],{"class":100},"\"submit\"",[79,226,227],{"class":85}," />\n",[10,229,230],{},"The above code listens to the keyup event, but only on the 'Enter' key. This\nmakes things really easy to use and prevents the developer from needing to write\ntheir own logic to handle this common problem.",[10,232,233,234,239],{},"See\n",[31,235,238],{"href":236,"rel":237},"https://vuejs.org/v2/guide/events.html#Event-Modifiers",[35],"this page of the documentation","\nfor more information about event modifiers.",[241,242,243],"style",{},"html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .s4JwU, html code.shiki .s4JwU{--shiki-default:#85E89D}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":75,"searchDepth":245,"depth":245,"links":246},2,[247,248],{"id":21,"depth":245,"text":22},{"id":59,"depth":245,"text":60,"children":249},[250,252,253],{"id":64,"depth":251,"text":65},3,{"id":161,"depth":251,"text":162},{"id":183,"depth":251,"text":184},"2021-08-02T00:00:00.000Z","Directives are a huge part of Vue, so it is important that we understand them as developers. Not only are they an essential part of the Vue framework out of the box, but by understanding them more fully we can create more powerful functionality in our apps.","md","images/mountain.jpg",{"alt":259},"understanding vue directives",true,"/blog/understanding-vue-directives",{"title":5,"description":255},"blog/understanding-vue-directives",null,"WnPK01gM0b859jhOTKaskNglb9wK6NyZfw7511BcHPo",1750540913838]